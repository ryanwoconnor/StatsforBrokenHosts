[Build State for ML]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 3 * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = StatsforMissingData
request.ui_dispatch_view = search
search = | tstats count WHERE `missingdatasearchterms` earliest=`missingdataearliest` latest=@d-1s by _time host sourcetype index span=`missingdatatimespan` \
| makecontinuous _time span=`missingdatatimespan` \
| eval combo=host."&&&&".sourcetype."&&&&".index \
| xyseries _time combo count \
| makecontinuous _time span=`missingdatatimespan` \
| fillnull value=0 \
| untable _time combo count \
| eval HourOfDay=strftime(_time, "%H") \
| eval BucketMinuteOfHour=strftime(_time, "%M") \
| eval DayOfWeek=strftime(_time, "%A") \
| eval DayOfWeekNumeric=strftime(_time, "%w") \
| eval combo_count=_time.", ".count\
| eval datapoint=case(count>0, "1", 1=1, "0") \
| stats avg(count) as avg stdev(count) as stdev list(combo_count) as combo_count sum(datapoint) as datapoints_for_day by HourOfDay BucketMinuteOfHour DayOfWeek DayOfWeekNumeric combo \
| sort 0 + combo DayOfWeekNumeric HourOfDay BucketMinuteOfHour \
| eventstats avg(avg) as avg_overall sum(datapoints_for_day) as total_datapoints by combo \
| eval lowerBound=(avg-stdev*exact(2)), upperBound=(avg+stdev*exact(2)) \
| eval frequency = total_datapoints/(`missingdatatimespandatapoints`)\
| fields combo_count, lowerBound,upperBound,HourOfDay,BucketMinuteOfHour,DayOfWeek,combo, spike, DayOfWeekNumeric, avg avg_stream, avg_overall, stdev, datapoints_for_day total_datapoints frequency\
| outputlookup state_lookup



[Host Frequency]
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = | tstats count where `missingdatasearchterms` earliest=`missingdataearliest` latest=now() by host _time span=1h \
| stats count by _time, host \
| stats count(host) as M by host \
| addinfo \
| eval N=round((info_max_time-info_min_time)/1/60/60,0) \
| eval frequency=round((M/N)*100,0) \
| fields host, frequency  \
| eventstats p95(frequency) as p95 p75(frequency) as p75 p50(frequency) as p50 p25(frequency) as p25 \
| eval Percentile = case(frequency >= p95, "95",frequency >= p75, "75",frequency >= p50, "50", frequency >= p25, "25", 1=1, "0")\
| fields - p* _time\
| sort 0 - frequency

[Index Frequency]
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = | tstats count where `missingdatasearchterms`earliest=`missingdataearliest` latest=now() by index _time span=1h \
| fields _time index\
| stats count by _time, index \
| stats count(index) as M by index \
| addinfo \
| eval N=round((info_max_time-info_min_time)/1/60/60,0) \
| eval frequency=round((M/N)*100,0) \
| fields index, frequency \
| eventstats p95(frequency) as p95 p75(frequency) as p75 p50(frequency) as p50 p25(frequency) as p25 \
| eval Percentile = case(frequency >= p95, "95",frequency >= p75, "75",frequency >= p50, "50", frequency >= p25, "25", 1=1, "0")\
| fields - p* _time\
| sort 0 - frequency

[Sourcetype Frequency]
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = | tstats count where `missingdatasearchterms` earliest=`missingdataearliest` latest=now() by sourcetype _time span=1h \
| stats count by _time, sourcetype \
| stats count(sourcetype) as M by sourcetype \
| addinfo \
| eval N=round((info_max_time-info_min_time)/1/60/60,0)\
| eval frequency=round((M/N)*100,0) \
| fields sourcetype, frequency  \
| eventstats p95(frequency) as p95 p75(frequency) as p75 p50(frequency) as p50 p25(frequency) as p25 \
| eval Percentile = case(frequency >= p95, "95",frequency >= p75, "75",frequency >= p50, "50", frequency >= p25, "25", 1=1, "0")\
| fields - p* _time\
| sort 0 - frequency